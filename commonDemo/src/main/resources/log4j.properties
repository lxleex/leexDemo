log4j.rootLogger =ALL,systemOut

#输出到控制台
# 控制台输出Appender
log4j.appender.systemOut = org.apache.log4j.ConsoleAppender
# 使用自定义日志格式化器
log4j.appender.systemOut.layout = org.apache.log4j.PatternLayout
# 自定义日志格式
log4j.appender.systemOut.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n
# 指定该Appender只的日志级别，优先级大于全局日志级别
log4j.appender.systemOut.Threshold = DEBUG
# 默认值是true,所有的消息都会被立即输出
log4j.appender.systemOut.ImmediateFlush = TRUE
# 默认值System.out,输出到控制台(err为红色,out为黑色)
log4j.appender.systemOut.Target = System.out
#指定日志编码
log4j.appender.systemOut.encoding=UTF-8

# 按照文件大小拆分的 appender 对象
# 日志文件输出的 appender 对象
log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender
# 指定消息格式 layout
log4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout
# 指定消息格式的内容
log4j.appender.rollingFile.layout.conversionPattern = [%-10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# 指定日志文件保存路径
log4j.appender.rollingFile.file = /logs/log4j1.log
# 指定日志文件的字符集
log4j.appender.rollingFile.encoding = UTF-8
# 指定日志文件内容的大小
log4j.appender.rollingFile.maxFileSize = 1MB
# 指定日志文件的数量
log4j.appender.rollingFile.maxBackupIndex = 10

# 按照时间规则拆分的 appender 对象
log4j.appender.dailyFile = org.apache.log4j.DailyRollingFileAppender
# 指定消息格式 layout
log4j.appender.dailyFile.layout = org.apache.log4j.PatternLayout
# 指定消息格式的内容
log4j.appender.dailyFile.layout.conversionPattern = [%-10p]%r  %l %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# 指定日志文件保存路径
log4j.appender.dailyFile.file = /logs/log4j2.log
# 指定日志文件的字符集
log4j.appender.dailyFile.encoding = UTF-8
# 指定日期拆分规则 只能根据-分割，不支持：（冒号），'.'yyyy-MM-dd-HH-mm-ss 每秒分隔，'.'yyyy-MM-dd-HH 按小时分隔
log4j.appender.dailyFile.datePattern = '.'yyyy-MM-dd-HH-mm-ss

# 自定义Logger
log4j.logger.com.leex.log.log4j.log1 = info,rollingFile
log4j.logger.com.leex.log.log4j.log2 = info,dailyFile